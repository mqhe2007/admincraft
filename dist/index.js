!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?module.exports=o():"function"==typeof define&&define.amd?define(o):(e=e||self)["vue-module-loader"]=o()}(this,(function(){"use strict";var e={namespaced:!0,state:{GLOBAL:{}},mutations:{create(e,{component:o,position:n="GLOBAL"}){if(!o.name)return console.error("创建的动态组件必须设置name属性");e[n]||(e[n]={});let t=o.name;if(e[n][t])return console.error(`动态组件${t}在插槽位置${n}中已经存在，本次创建数据将被丢弃。`);e[n][t]=o},destroy:(e,{name:o,position:n="GLOBAL"})=>e[n]?e[n][o]?void delete e[n][o]:console.error(`要删除的组件${o}不在插槽${n}中，请检查组件名称和插槽位置是否正确。`):console.error(`从动态组件插槽${n}删除组件${o}失败，插槽位置不存在，请检查插槽位置是否正确。`)}};var o=(e,o)=>{console.log(`%c${e}%c${o}`,"background: #00d1b2; padding: 5px; color: #fff; border-radius: 5px 0 0 5px","background: #555; padding: 5px; color: #fff; border-radius: 0 5px 5px 0")};function n(e){if("object"==typeof e){let n=[];for(let t in e)window[t]||n.push(new Promise((n,r)=>{let i=document.createElement("script");i.src=e[t],i.onload=()=>{window[t]?("function"==typeof window[t]?window[t].call(this):window[t].default.call(this),o(t,"模块加载完毕")):console.warn(t,"模块加载失败，请检查模块资源是否成功加载。"),n()},i.onerror=()=>{r("创建模块脚本元素失败。")},document.body.appendChild(i)}));return Promise.all(n)}"function"==typeof e?e.call(this):console.error("模块加载方法只接受模块列表对象或者模块函数对象作为参数。")}return function(o,t={}){var r;o.prototype.$eventBus=function(){let e={};return{emit(o,n){for(let t of e[o].values())t(n)},on(o,n){"function"==typeof n&&(e[o]||(e[o]=new Set),e[o].add(n))},off(o,n){if(!n)return console.warn("取消监听必须传入已被监听的事件处理函数");e[o].delete(n)},clear(){e={}},getEvents:()=>e}}(),o.prototype.$moduleLoader=n,t.store&&(t.store.registerModule("dynamicComponent",e),o.prototype.$dynamicComponent=(r=t.store,{create(e,o){if("object"!=typeof e)return console.error("动态组件create方法至少接受一个组件对象作为参数。");r.commit("dynamicComponent/create",{component:e,position:o})},destroy(e,o){if("string"!=typeof e)return console.error("动态组件destroy方法至少接收一个组件名称参数。");r.commit("dynamicComponent/destroy",{name:e,position:o})}}))}}));
